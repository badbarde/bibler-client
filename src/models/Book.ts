/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Media,
    MediaFromJSON,
    MediaFromJSONTyped,
    MediaToJSON,
} from './';

/**
 * 
 * @export
 * @interface Book
 */
export interface Book {
    /**
     * 
     * @type {number}
     * @memberof Book
     */
    key: number;
    /**
     * 
     * @type {string}
     * @memberof Book
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof Book
     */
    author: string;
    /**
     * 
     * @type {string}
     * @memberof Book
     */
    publisher: string;
    /**
     * 
     * @type {string}
     * @memberof Book
     */
    number: string;
    /**
     * 
     * @type {string}
     * @memberof Book
     */
    shorthand: string;
    /**
     * 
     * @type {string}
     * @memberof Book
     */
    category: string;
    /**
     * 
     * @type {string}
     * @memberof Book
     */
    isbn?: string;
    /**
     * 
     * @type {Media}
     * @memberof Book
     */
    media?: Media;
}

export function BookFromJSON(json: any): Book {
    return BookFromJSONTyped(json, false);
}

export function BookFromJSONTyped(json: any, ignoreDiscriminator: boolean): Book {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'key': json['key'],
        'title': json['title'],
        'author': json['author'],
        'publisher': json['publisher'],
        'number': json['number'],
        'shorthand': json['shorthand'],
        'category': json['category'],
        'isbn': !exists(json, 'isbn') ? undefined : json['isbn'],
        'media': !exists(json, 'media') ? undefined : MediaFromJSON(json['media']),
    };
}

export function BookToJSON(value?: Book | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'key': value.key,
        'title': value.title,
        'author': value.author,
        'publisher': value.publisher,
        'number': value.number,
        'shorthand': value.shorthand,
        'category': value.category,
        'isbn': value.isbn,
        'media': MediaToJSON(value.media),
    };
}


